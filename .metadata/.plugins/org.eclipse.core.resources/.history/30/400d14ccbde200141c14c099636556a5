object test {
	// Super simple recaps on Functions and Pattern Matching to warm things up
	
	val f: PartialFunction[String, String] = { case "ping" => "pong" }
	f("ping")
	f.isDefinedAt("foo")
	
	val e: PartialFunction[List[Int], String] = {
		case Nil => "one"
		case x :: y :: rest => "two"
	}
	
	e.isDefinedAt(List(1,2,3))
	
	val g: PartialFunction[List[Int], String] = {
		case Nil => "one"
		case x :: rest => {
			rest match {
				case Nil => "two"
			}
		}
	}
	
	g.isDefinedAt(List(1,2,3))
}